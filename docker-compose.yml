version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:latest
    container_name: d3v-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: d3v
    volumes:
      - mongodb_data:/data/db
      - ./mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - d3v_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb:27017/d3v --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache (for rate limiting, session storage)
  redis:
    image: redis:alpine
    container_name: d3v-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - d3v_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: d3v-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/d3v?authSource=admin
      REDIS_URI: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: 24h
      TATUM_API_KEY: ${TATUM_API_KEY}
      WEBHOOK_URL: ${WEBHOOK_URL}
    depends_on:
      - mongodb
      - redis
    networks:
      - d3v_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=${BACKEND_URL}/api
    container_name: d3v-frontend
    restart: unless-stopped
    networks:
      - d3v_network
    depends_on:
      - backend

  # Nginx Web Server & Reverse Proxy
  nginx:
    image: nginx:stable-alpine
    container_name: d3v-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - frontend
      - backend
    networks:
      - d3v_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  d3v_network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: